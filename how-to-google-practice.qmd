---
title: "how-to-google-practice"
format: html
editor: visual
---

```{r}
library(tidyverse)

```

## Problem 1

**Goal:** You have two data sets, `a` and `b`. Each contain the same attributes (i.e. columns) \-- `month`, `season`, and `daylight_savings`. Identify which records (i.e. rows of data) in data table `a` are not contained in data table `b`.

```{r}
a <- data.frame(month = c("October", "November", "December", "January", "February"),
                season = c("Fall", "Fall", "Winter", "Winter", "Winter"),
                daylight_savings = c("yes", "partly", "no", "no", "no"))
b <- data.frame(month = c("October", "December", "February"),
                season = c("Fall", "Winter", "Winter"),
                daylight_savings = c("yes", "no", "no"))

# from stackoverflow https://stackoverflow.com/questions/5812478/how-i-can-select-rows-from-a-dataframe-that-do-not-match
anti_join(a, b, by = join_by(month, season, daylight_savings))
# subset(a, !(month %in% b$month))
```

## Problem 2

**Goal:** Modify the following code such that it sorts any **blue** animals from the `animals` vector into the `blue_animals` vector.

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ vector of animals  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~
animals <- c("blue tang", "red panda", "Blue jay",
             "green sea turtle", "blue morpho butterfly", 
             "Blue iguana", "Red squirrel")
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ initialize empty vector to store blue-colored animals  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blue_animals <- c()
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ sort blue animals into their own list  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for (i in 1:length(animals)){
  current_animal <- animals[i]
  if(isTRUE(str_detect(current_animal, "blue"))){
    message("The '", current_animal, "' is a blue animal")
    blue_animals <- current_animal
  }
}
```
